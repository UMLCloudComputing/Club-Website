"use strict";(self.webpackChunkumlcloudcomputing=self.webpackChunkumlcloudcomputing||[]).push([[6101],{2862:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=i(4848),r=i(8453);const o={sidebar_position:2},s="Getting Started",a={id:"tutorials/Git Version Control/Basics/Getting Started",title:"Getting Started",description:"Creating a Git folder",source:"@site/docs/tutorials/Git Version Control/Basics/Getting Started.md",sourceDirName:"tutorials/Git Version Control/Basics",slug:"/tutorials/Git Version Control/Basics/Getting Started",permalink:"/docs/tutorials/Git Version Control/Basics/Getting Started",draft:!1,unlisted:!1,editUrl:"https://github.com/UMLCloudComputing/UMLCloudComputing.github.io/edit/main/docs/tutorials/Git Version Control/Basics/Getting Started.md",tags:[],version:"current",lastUpdatedBy:"lapse",lastUpdatedAt:1723326221e3,sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Git Basics",permalink:"/docs/tutorials/Git Version Control/Basics/Git Basics"},next:{title:"New Files",permalink:"/docs/tutorials/Git Version Control/Basics/New Files"}},c={},l=[{value:"Creating a Git folder",id:"creating-a-git-folder",level:2},{value:"Initialize Git",id:"initialize-git",level:2}];function d(t){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,n.jsx)(e.h2,{id:"creating-a-git-folder",children:"Creating a Git folder"}),"\n",(0,n.jsx)(e.p,{children:"Creating a new folder for a project:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-bash",children:"[user@localhost] $ mkdir newProject\n[user@localhost] $ cd newProject\n"})}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:"/docs/tutorials/Git%20Version%20Control/Basics/#mkdir",children:(0,n.jsx)(e.code,{children:"mkdir"})})," makes a new directory. ",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(e.a,{href:"/docs/tutorials/Git%20Version%20Control/Basics/#cd",children:(0,n.jsx)(e.code,{children:"cd"})})," changes the current working directory."]}),"\n",(0,n.jsx)(e.h2,{id:"initialize-git",children:"Initialize Git"}),"\n",(0,n.jsx)(e.p,{children:"Once in the correct folder, initialize git on the folder:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-bash",children:"[user@localhost] $ git init\n                   Initialized empty Git repository in /User/user/newProject/.git/\n"})}),"\n",(0,n.jsx)(e.p,{children:"New Git repository created!"}),"\n",(0,n.jsx)(e.admonition,{type:"info",children:(0,n.jsx)(e.p,{children:"Git automatically knows to watch this folder for changes."})})]})}function u(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var n=i(6540);const r={},o=n.createContext(r);function s(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:s(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);