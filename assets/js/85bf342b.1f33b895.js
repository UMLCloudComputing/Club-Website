"use strict";(self.webpackChunkumlcloudcomputing=self.webpackChunkumlcloudcomputing||[]).push([[9291],{834:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(4848),s=t(8453);const o={sidebar_position:6},a="Deploying and Testing the Backend",r={id:"activities/PhotoSky/Part 1: AWS Infrastructure and Backend/deploying-and-testing-backend",title:"Deploying and Testing the Backend",description:"In this final section of Part 1, we'll deploy our PhotoSky backend to AWS and test it to ensure everything is working correctly. We'll use the AWS CDK to deploy our stack and then use tools like curl or Postman to test our API endpoints.",source:"@site/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/6-deploying-and-testing-backend.md",sourceDirName:"activities/PhotoSky/Part 1: AWS Infrastructure and Backend",slug:"/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/deploying-and-testing-backend",permalink:"/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/deploying-and-testing-backend",draft:!1,unlisted:!1,editUrl:"https://github.com/UMLCloudComputing/UMLCloudComputing.github.io/edit/main/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/6-deploying-and-testing-backend.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"activitiesSidebar",previous:{title:"Creating the Lambda Function",permalink:"/docs/activities/PhotoSky/Part 1: AWS Infrastructure and Backend/creating-lambda-function"},next:{title:"Part 2: Frontend Development and Integration",permalink:"/docs/category/part-2-frontend-development-and-integration"}},l={},d=[{value:"Deploying the Backend",id:"deploying-the-backend",level:2},{value:"Testing the Backend",id:"testing-the-backend",level:2},{value:"1. List Images",id:"1-list-images",level:3},{value:"2. Get Presigned URL for Upload",id:"2-get-presigned-url-for-upload",level:3},{value:"3. Upload an Image",id:"3-upload-an-image",level:3},{value:"4. Get Image URL",id:"4-get-image-url",level:3},{value:"5. Get Image Preview URL",id:"5-get-image-preview-url",level:3},{value:"6. Delete Image",id:"6-delete-image",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Conclusion",id:"conclusion",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"deploying-and-testing-the-backend",children:"Deploying and Testing the Backend"})}),"\n",(0,i.jsx)(n.p,{children:"In this final section of Part 1, we'll deploy our PhotoSky backend to AWS and test it to ensure everything is working correctly. We'll use the AWS CDK to deploy our stack and then use tools like curl or Postman to test our API endpoints."}),"\n",(0,i.jsx)(n.h2,{id:"deploying-the-backend",children:"Deploying the Backend"}),"\n",(0,i.jsx)(n.p,{children:"First, let's deploy our backend using AWS CDK:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ensure you're in the root directory of your project:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd /workspaces/photosky\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Deploy the stack:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cdk deploy\n"})}),"\n",(0,i.jsx)(n.p,{children:"This command will synthesize a CloudFormation template from our CDK code and deploy it to AWS. You'll see output detailing the resources being created."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"When prompted to confirm the changes, type 'y' and press Enter."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Wait for the deployment to complete. This may take a few minutes."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Once the deployment is finished, you'll see output containing the API Gateway URL. It will look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Outputs:\nPhotoskyStack.apiEndpoint12345678 = https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod/\n"})}),"\n",(0,i.jsx)(n.p,{children:"Copy this URL; you'll need it for testing and for your frontend."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Update your ",(0,i.jsx)(n.code,{children:".env"})," file with this URL:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'echo "REACT_APP_API_URL=https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod" >> .env\n'})}),"\n",(0,i.jsx)(n.p,{children:"Replace the URL with your actual API Gateway URL."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing-the-backend",children:"Testing the Backend"}),"\n",(0,i.jsxs)(n.p,{children:["Now that our backend is deployed, let's test each of our API endpoints. We'll use curl for these examples, but you could also use a tool like Postman if you prefer a graphical interface. For our tests, we'll use the ",(0,i.jsx)(n.code,{children:"delorean.jpg"})," image that's included in the root of the repository."]}),"\n",(0,i.jsx)(n.h3,{id:"1-list-images",children:"1. List Images"}),"\n",(0,i.jsx)(n.p,{children:"[This section remains the same]"}),"\n",(0,i.jsx)(n.h3,{id:"2-get-presigned-url-for-upload",children:"2. Get Presigned URL for Upload"}),"\n",(0,i.jsx)(n.p,{children:"Test the endpoint to get a presigned URL for uploading an image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST \\\n  https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod/get-presigned-url \\\n  -H \'Content-Type: application/json\' \\\n  -d \'{"filename":"delorean.jpg", "filetype":"image/jpeg"}\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"You should receive a JSON response with a presigned URL and fields for uploading:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "url": "https://your-bucket-name.s3.amazonaws.com/",\n  "fields": {\n    "key": "delorean.jpg",\n    "bucket": "your-bucket-name",\n    "X-Amz-Algorithm": "AWS4-HMAC-SHA256",\n    ...\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-upload-an-image",children:"3. Upload an Image"}),"\n",(0,i.jsxs)(n.p,{children:["To actually upload the ",(0,i.jsx)(n.code,{children:"delorean.jpg"})," image using the presigned URL, use this command (replace the URL and fields with those from the previous response):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X POST https://your-bucket-name.s3.amazonaws.com/ \\\n  -F key=delorean.jpg \\\n  -F bucket=your-bucket-name \\\n  -F X-Amz-Algorithm=AWS4-HMAC-SHA256 \\\n  ... \\\n  -F file=@delorean.jpg\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Make sure you're in the root directory of the project where ",(0,i.jsx)(n.code,{children:"delorean.jpg"})," is located when running this command."]}),"\n",(0,i.jsx)(n.h3,{id:"4-get-image-url",children:"4. Get Image URL"}),"\n",(0,i.jsx)(n.p,{children:"After uploading the image, test getting its URL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod/delorean.jpg\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should receive a JSON response with a presigned URL for downloading the image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{"url": "https://your-bucket-name.s3.amazonaws.com/delorean.jpg?AWSAccessKeyId=..."}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"5-get-image-preview-url",children:"5. Get Image Preview URL"}),"\n",(0,i.jsx)(n.p,{children:"Test getting a preview URL for the image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl "https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod/delorean.jpg?preview=true"\n'})}),"\n",(0,i.jsx)(n.p,{children:"You should receive a JSON response with a presigned URL for downloading the preview image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{"url": "https://your-bucket-name.s3.amazonaws.com/preview_delorean.jpg?AWSAccessKeyId=..."}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"6-delete-image",children:"6. Delete Image"}),"\n",(0,i.jsx)(n.p,{children:"Finally, test deleting the image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X DELETE https://abcdefghij.execute-api.us-east-1.amazonaws.com/prod/delete-image/delorean.jpg\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should receive a JSON response confirming the deletion:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{"message": "Image deleted successfully"}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter any issues during testing:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Check the CloudWatch Logs for your Lambda function. You can find these in the AWS Console under CloudWatch > Log groups."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ensure your IAM permissions are set up correctly. The Lambda function should have permissions to access the S3 bucket."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Verify that your S3 bucket name in the Lambda function environment variables matches the actual bucket name."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If you make any changes to your Lambda function code, remember to redeploy your stack with ",(0,i.jsx)(n.code,{children:"cdk deploy"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You've successfully deployed and tested your PhotoSky backend. Your AWS infrastructure is now set up with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An S3 bucket for storing images"}),"\n",(0,i.jsx)(n.li,{children:"A Lambda function for handling image operations"}),"\n",(0,i.jsx)(n.li,{children:"An API Gateway for exposing your Lambda function as a RESTful API"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"In the next part of this tutorial, we'll build the frontend of our application to interact with this backend."}),"\n",(0,i.jsx)(n.p,{children:"Remember to keep your API Gateway URL handy, as you'll need it when configuring your frontend application."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);